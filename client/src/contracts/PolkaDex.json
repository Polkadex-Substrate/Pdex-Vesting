{
  "contractName": "PolkaDex",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "VestedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ClaimAfterVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "NewAddress",
          "type": "address"
        }
      ],
      "name": "TransferOwnerShip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ShowOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ClaimAfterVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ShowOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"NewAddress\",\"type\":\"address\"}],\"name\":\"TransferOwnerShip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"VestedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/PDex UI/contracts/PolkaDex.sol\":\"PolkaDex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/PDex UI/contracts/ERC20.sol\":{\"keccak256\":\"0xd62b05efe3b85845a22592901c4845af6f83721c98d01436af4d5f24ca46d061\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29265508c90835b8176bc6300ceaa492ddff7da834ea90a6631f3410b0e1da4d\",\"dweb:/ipfs/QmW4Yo9JbtPM1ncDFqhKLqw7WBuTzkN1FrWcL3n2YrBmi5\"]},\"/D/PDex UI/contracts/PolkaDex.sol\":{\"keccak256\":\"0x447147e61aeb8851bbd53acc365717b24f11400cdc04d793fd44a3925c726467\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a396e0d4d22c8d1d3d51eb62da02a854d862acaeddfa9076196d50a280a3c05\",\"dweb:/ipfs/QmRqxPRoC7nBBrDnPF99cFKC6tME88J7b8iwEWWjGaK5wh\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040518060400160405280600881526020017f506f6c6b616465780000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f5044455800000000000000000000000000000000000000000000000000000000815250816005908051906020019062000096929190620010d8565b508060069080519060200190620000af929190620010d8565b506012600760006101000a81548160ff021916908360ff16021790555060016000819055505050620000e66200013560201b60201c565b33600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555043608081815250506200118e565b69014542ba12a337c000006001600073d94d2a5a94c26aeafed4ba22a2b4bb785d9bbc3973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506910f0cf064dd5920000006001600073f14c9dbdb31b0a18af44fcf97ed12b0abfe1b92e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069014542ba12a337c000006001600073cca3041eb270b3cc31e85c4cefc4ea06e7ab802473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550691969368974c05b0000006001600073d9fc20ad04e81f75448985be02222c46b4189f1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506907695a92c20d6fe0000060016000734233168fe150776ba6f8cda98c90411b5455150273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555068ed2b525841adfc000060016000737c28a20a66d687107dfa810566f237fb3810cbf473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506903b4ad496106b7f000006001600073debb257f2a15a38b1ffbb1f9ea5e825434e3313e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506903b4ad496106b7f000006001600073a1cec90603405da9578c88cdc8cae7e098532dea73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506903b4ad496106b7f00000600160007387e460405676f60993b7bc0c77a5ff049ee2f74473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550681c75d6ae6e4814000060016000735b791250481e6e5521073166c01f4cbca2a5682573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550690d7fe4f90606305800006001600073bfc94a95d4448c802e848c68fdd2fc0fee4a876e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506907695a92c20d6fe000006001600073b024a232257ca0dec600c9c4223313e5dad862f573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506908ffedfb595975900000600160007353f470a909d7ce7f35e62f4470fd440b1ed5d8cd73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506903b4ad496106b7f0000060016000739d943d33e70053e3146d82c57083af4bd6a7009b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506903b4ad496106b7f000006001600073b089425c9c078b70cf96cc6051850f37f86b142673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550690ada44a009dcd18800006001600073527788ae179be743614496680d38b39d87ee1ce873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506906bff27c8303182c000060016000737131128602732f0842e19704d69ac44a87c36eca73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550690558ce2463c4354800006001600073a2dcb52f5cf34a84a2ebfb7d937f7051ae4c697b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069021e19e0c9bab240000060016000731d945e9ea2da9cb9a36b3e53e78b5e22bea1e3d973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069033c5499031720c00000600160007369fe859b2ae937927c24812dff8ee078395522bf73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c19375648000006001600073082878a39693beea5684a68789b7211ca7ae722173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550690878678326eac900000060016000734f720de916d89ad7e8a531eb3f8e92798687b4d173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c19375648000006001600073b8067f9837376a004a596c069ab231bb5c56f6a173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069021e19e0c9bab2400000600160007329d80c9a4cc081d7c4dea8d50d308396c6f75a1873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c19375648000006001600073436516d67ae3e77c9ed2aa0057380b08126f531073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550690a968163f0a57b400000600160007366b8c2f780710874fb21d2795404102010d7a03473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c193756480000060016000730a220d7e56d9a03193e57fe74d8d4cb5492483b673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c19375648000006001600073b17d155b1b263b7d9d999b675b02c2117ba046fc73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069043c33c1937564800000600160007363d417a577b50c96f4f09148d4e4d70950db052273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069010f0cf064dd59200000600160007308ea0b89eba52bd3f7a27822eceba18bf77ee07273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506901da56a4b0835bf800006001600073a93ee2d5ac5b802b9a8dbbc4db2cb3a772e89c7c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555069022c777de9b2f8c40000600160007394dfa7f9ed91e5f08c24d12613f59ddbfff0bc8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506901da56a4b0835bf80000600160007370ce694ea3096763295eb38977c41890808a34fa73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000e067346e947f92267d951dfe5de2e3db3078f3049b9966a019fdd105d3fc868d0000062000e6a60201b60201c565b694930a3cccdc6f5b80000600160007346e947f92267d951dfe5de2e3db3078f3049b99673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000f0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000f22600083836200104a60201b60201c565b62000f3e816004546200104f60201b62000ea01790919060201c565b60048190555062000f9d81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200104f60201b62000ea01790919060201c565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b505050565b600080828401905083811015620010ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200111057600085556200115c565b82601f106200112b57805160ff19168380011785556200115c565b828001600101855582156200115c579182015b828111156200115b5782518255916020019190600101906200113e565b5b5090506200116b91906200116f565b5090565b5b808211156200118a57600081600090555060010162001170565b5090565b608051611854620011ae6000398061086e528061089a52506118546000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610479578063a9059cbb146104dd578063b1eb346814610541578063dd62ed3e14610585576100f5565b806370a0823114610312578063743c83a71461036a57806395d89b41146103c257806396ce267a14610445576100f5565b806323b872dd116100d357806323b872dd146101ff578063313ce5671461028357806339509351146102a45780633ac8258014610308576100f5565b806306fdde03146100fa578063095ea7b31461017d57806318160ddd146101e1575b600080fd5b6101026105fd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610142578082015181840152602081019050610127565b50505050905090810190601f16801561016f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c96004803603604081101561019357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061069f565b60405180821515815260200191505060405180910390f35b6101e96106bd565b6040518082815260200191505060405180910390f35b61026b6004803603606081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106c7565b60405180821515815260200191505060405180910390f35b61028b6107a0565b604051808260ff16815260200191505060405180910390f35b6102f0600480360360408110156102ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107b7565b60405180821515815260200191505060405180910390f35b61031061086a565b005b6103546004803603602081101561032857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a57565b6040518082815260200191505060405180910390f35b6103ac6004803603602081101561038057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa0565b6040518082815260200191505060405180910390f35b6103ca610ab8565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561040a5780820151818401526020810190506103ef565b50505050905090810190601f1680156104375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61044d610b5a565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104c56004803603604081101561048f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b84565b60405180821515815260200191505060405180910390f35b610529600480360360408110156104f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c51565b60405180821515815260200191505060405180910390f35b6105836004803603602081101561055757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c6f565b005b6105e76004803603604081101561059b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e19565b6040518082815260200191505060405180910390f35b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106955780601f1061066a57610100808354040283529160200191610695565b820191906000526020600020905b81548152906001019060200180831161067857829003601f168201915b5050505050905090565b60006106b36106ac610f28565b8484610f30565b6001905092915050565b6000600454905090565b60006106d4848484611127565b610795846106e0610f28565b6107908560405180606001604052806028815260200161178960289139600360008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610746610f28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461146a9092919063ffffffff16565b610f30565b600190509392505050565b6000600760009054906101000a900460ff16905090565b60006108606107c4610f28565b8461085b85600360006107d5610f28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea090919063ffffffff16565b610f30565b6001905092915050565b60017f0000000000000000000000000000000000000000000000000000000000000000014311806108bd575060017f00000000000000000000000000000000000000000000000000000000000000000143145b610912576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180611738602b913960400191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116109c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f7520617265206e6f7420656c696769626c6520666f7220636c61696d000081525060200191505060405180910390fd5b610a1033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611524565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60016020528060005260406000206000915090505481565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b505780601f10610b2557610100808354040283529160200191610b50565b820191906000526020600020905b815481529060010190602001808311610b3357829003601f168201915b5050505050905090565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610c47610b91610f28565b84610c42856040518060600160405280602581526020016117fa6025913960036000610bbb610f28565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461146a9092919063ffffffff16565b610f30565b6001905092915050565b6000610c65610c5e610f28565b8484611127565b6001905092915050565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f756e617574686f72697a6564206163636573730000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5472616e736665724f776e6572536869702044656e696564000000000000000081525060200191505060405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610f1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806117d66024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561103c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117166022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600260005414156111a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b6002600081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561122e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117b16025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806116f36023913960400191505060405180910390fd5b6113208160405180606001604052806026815260200161176360269139600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461146a9092919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113b581600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea090919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a36001600081905550505050565b6000838311158290611517576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114dc5780820151818401526020810190506114c1565b50505050905090810190601f1680156115095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6115d3600083836116ed565b6115e881600454610ea090919063ffffffff16565b60048190555061164081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea090919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737354696d6520746f20636c61696d2076657374656420746f6b656e7320686173206e6f74207265616368656445524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220824eb8423086c9becd0fd9f1b8291049176a44e0b624cd4542532e19e2a1b51664736f6c63430007060033",
  "deployedBytecode": "",
  "immutableReferences": {
    "1239": [
      {
        "length": 32,
        "start": 2158
      },
      {
        "length": 32,
        "start": 2202
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "82:1132:2:-:0;;;191:144;;;;;;;;;;14414:174:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14489:5;14481;:13;;;;;;;;;;;;:::i;:::-;;14515:7;14505;:17;;;;;;;;;;;;:::i;:::-;;14545:2;14533:9;;:14;;;;;;;;;;;;;;;;;;12941:1;14558:7;:22;;;;14414:174;;242:12:2::1;:10;;;:12;;:::i;:::-;273:10;265:5;;:18;;;;;;;;;;;;;;;;;;315:12;294:33;;;;::::0;::::1;82:1132:::0;;23521:3633:0;23825:22;23766:12;:56;23779:42;23766:56;;;;;;;;;;;;;;;:81;;;;23919:23;23860:12;:56;23873:42;23860:56;;;;;;;;;;;;;;;:82;;;;24014:22;23955:12;:56;23968:42;23955:56;;;;;;;;;;;;;;;:81;;;;24108:24;24049:12;:56;24062:42;24049:56;;;;;;;;;;;;;;;:83;;;;24204:23;24145:12;:56;24158:42;24145:56;;;;;;;;;;;;;;;:82;;;;24299:22;24240:12;:56;24253:42;24240:56;;;;;;;;;;;;;;;:81;;;;24393:23;24334:12;:56;24347:42;24334:56;;;;;;;;;;;;;;;:82;;;;24488:23;24429:12;:56;24442:42;24429:56;;;;;;;;;;;;;;;:82;;;;24583:23;24524:12;:56;24537:42;24524:56;;;;;;;;;;;;;;;:82;;;;24678:21;24619:12;:56;24632:42;24619:56;;;;;;;;;;;;;;;:80;;;;24771:23;24712:12;:56;24725:42;24712:56;;;;;;;;;;;;;;;:82;;;;24866:23;24807:12;:56;24820:42;24807:56;;;;;;;;;;;;;;;:82;;;;24961:23;24902:12;:56;24915:42;24902:56;;;;;;;;;;;;;;;:82;;;;25056:23;24997:12;:56;25010:42;24997:56;;;;;;;;;;;;;;;:82;;;;25151:23;25092:12;:56;25105:42;25092:56;;;;;;;;;;;;;;;:82;;;;25246:23;25187:12;:56;25200:42;25187:56;;;;;;;;;;;;;;;:82;;;;25341:23;25282:12;:56;25295:42;25282:56;;;;;;;;;;;;;;;:82;;;;25436:23;25377:12;:56;25390:42;25377:56;;;;;;;;;;;;;;;:82;;;;25531:23;25472:12;:56;25485:42;25472:56;;;;;;;;;;;;;;;:82;;;;25626:23;25567:12;:56;25580:42;25567:56;;;;;;;;;;;;;;;:82;;;;25721:23;25662:12;:56;25675:42;25662:56;;;;;;;;;;;;;;;:82;;;;25816:23;25757:12;:56;25770:42;25757:56;;;;;;;;;;;;;;;:82;;;;25911:23;25852:12;:56;25865:42;25852:56;;;;;;;;;;;;;;;:82;;;;26006:23;25947:12;:56;25960:42;25947:56;;;;;;;;;;;;;;;:82;;;;26101:23;26042:12;:56;26055:42;26042:56;;;;;;;;;;;;;;;:82;;;;26196:23;26137:12;:56;26150:42;26137:56;;;;;;;;;;;;;;;:82;;;;26291:23;26232:12;:56;26245:42;26232:56;;;;;;;;;;;;;;;:82;;;;26386:23;26327:12;:56;26340:42;26327:56;;;;;;;;;;;;;;;:82;;;;26481:23;26422:12;:56;26435:42;26422:56;;;;;;;;;;;;;;;:82;;;;26576:22;26517:12;:56;26530:42;26517:56;;;;;;;;;;;;;;;:81;;;;26670:22;26611:12;:56;26624:42;26611:56;;;;;;;;;;;;;;;:81;;;;26764:23;26705:12;:56;26718:42;26705:56;;;;;;;;;;;;;;;:82;;;;26896:22;26837:12;:56;26850:42;26837:56;;;;;;;;;;;;;;;:81;;;;26931:117;26951:42;27012:25;26931:5;;;:117;;:::i;:::-;27120:24;27061:12;:56;27074:42;27061:56;;;;;;;;;;;;;;;:83;;;;23521:3633::o;20373:378::-;20476:1;20457:21;;:7;:21;;;;20449:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20527:49;20556:1;20560:7;20569:6;20527:20;;;:49;;:::i;:::-;20604:24;20621:6;20604:12;;:16;;;;;;:24;;;;:::i;:::-;20589:12;:39;;;;20660:30;20683:6;20660:9;:18;20670:7;20660:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;20639:9;:18;20649:7;20639:18;;;;;;;;;;;;;;;:51;;;;20727:7;20706:37;;20723:1;20706:37;;;20736:6;20706:37;;;;;;;;;;;;;;;;;;20373:378;;:::o;23388:125::-;;;;:::o;2951:179::-;3009:7;3029:9;3045:1;3041;:5;3029:17;;3070:1;3065;:6;;3057:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:1;3114:8;;;2951:179;;;;:::o;82:1132:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;",
  "deployedSourceMap": "82:1132:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14658:91:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16889:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15757:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17565:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;15601:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;18428:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;343:485:2;;;:::i;:::-;;15928:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13213:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14868:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:82:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;19219:388:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;16298:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;943:178:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16561:181:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14658:91;14703:13;14736:5;14729:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14658:91;:::o;16889:194::-;16992:4;17014:39;17023:12;:10;:12::i;:::-;17037:7;17046:6;17014:8;:39::i;:::-;17071:4;17064:11;;16889:194;;;;:::o;15757:108::-;15818:7;15845:12;;15838:19;;15757:108;:::o;17565:454::-;17705:4;17722:36;17732:6;17740:9;17751:6;17722:9;:36::i;:::-;17769:220;17792:6;17813:12;:10;:12::i;:::-;17840:138;17896:6;17840:138;;;;;;;;;;;;;;;;;:11;:19;17852:6;17840:19;;;;;;;;;;;;;;;:33;17860:12;:10;:12::i;:::-;17840:33;;;;;;;;;;;;;;;;:37;;:138;;;;;:::i;:::-;17769:8;:220::i;:::-;18007:4;18000:11;;17565:454;;;;;:::o;15601:91::-;15650:5;15675:9;;;;;;;;;;;15668:16;;15601:91;:::o;18428:288::-;18531:4;18553:133;18576:12;:10;:12::i;:::-;18603:7;18625:50;18664:10;18625:11;:25;18637:12;:10;:12::i;:::-;18625:25;;;;;;;;;;;;;;;:34;18651:7;18625:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;18553:8;:133::i;:::-;18704:4;18697:11;;18428:288;;;;:::o;343:485:2:-;550:1;529:18;:22;514:12;:37;:79;;;;592:1;571:18;:22;555:12;:38;514:79;506:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:1;661:12;:24;674:10;661:24;;;;;;;;;;;;;;;;:28;653:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;735:43;741:10;753:12;:24;766:10;753:24;;;;;;;;;;;;;;;;735:5;:43::i;:::-;816:1;789:12;:24;802:10;789:24;;;;;;;;;;;;;;;:28;;;;343:485::o;15928:157:0:-;16027:7;16059:9;:18;16069:7;16059:18;;;;;;;;;;;;;;;;16052:25;;15928:157;;;:::o;13213:47::-;;;;;;;;;;;;;;;;;:::o;14868:95::-;14915:13;14948:7;14941:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14868:95;:::o;1129:82:2:-;1171:7;1198:5;;;;;;;;;;;1191:12;;1129:82;:::o;19219:388:0:-;19327:4;19349:228;19372:12;:10;:12::i;:::-;19399:7;19421:145;19478:15;19421:145;;;;;;;;;;;;;;;;;:11;:25;19433:12;:10;:12::i;:::-;19421:25;;;;;;;;;;;;;;;:34;19447:7;19421:34;;;;;;;;;;;;;;;;:38;;:145;;;;;:::i;:::-;19349:8;:228::i;:::-;19595:4;19588:11;;19219:388;;;;:::o;16298:200::-;16404:4;16426:42;16436:12;:10;:12::i;:::-;16450:9;16461:6;16426:9;:42::i;:::-;16486:4;16479:11;;16298:200;;;;:::o;943:178:2:-;888:5;;;;;;;;;;;874:19;;:10;:19;;;866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:1:::1;1034:22;;:10;:22;;;;1026:58;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;1103:10;1095:5;;:18;;;;;;;;;;;;;;;;;;943:178:::0;:::o;16561:181:0:-;16675:7;16707:11;:18;16719:5;16707:18;;;;;;;;;;;;;;;:27;16726:7;16707:27;;;;;;;;;;;;;;;;16700:34;;16561:181;;;;:::o;2951:179::-;3009:7;3029:9;3045:1;3041;:5;3029:17;;3070:1;3065;:6;;3057:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:1;3114:8;;;2951:179;;;;:::o;11259:106::-;11312:15;11347:10;11340:17;;11259:106;:::o;21977:378::-;22130:1;22113:19;;:5;:19;;;;22105:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22211:1;22192:21;;:7;:21;;;;22184:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22293:6;22263:11;:18;22275:5;22263:18;;;;;;;;;;;;;;;:27;22282:7;22263:27;;;;;;;;;;;;;;;:36;;;;22331:7;22315:32;;22324:5;22315:32;;;22340:6;22315:32;;;;;;;;;;;;;;;;;;21977:378;;;:::o;13520:561::-;12985:1;13066:7;;:19;;13058:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12985:1;13132:7;:18;;;;13691:1:::1;13673:20;;:6;:20;;;;13665:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13775:1;13754:23;;:9;:23;;;;13746:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13848:108;13884:6;13848:108;;;;;;;;;;;;;;;;;:9;:17;13858:6;13848:17;;;;;;;;;;;;;;;;:21;;:108;;;;;:::i;:::-;13828:9;:17;13838:6;13828:17;;;;;;;;;;;;;;;:128;;;;13990:32;14015:6;13990:9;:20;14000:9;13990:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;13967:9;:20;13977:9;13967:20;;;;;;;;;;;;;;;:55;;;;14055:9;14038:35;;14047:6;14038:35;;;14066:6;14038:35;;;;;;;;;;;;;;;;;;12941:1:::0;13173:7;:22;;;;13520:561;;;:::o;5778:166::-;5864:7;5897:1;5892;:6;;5900:12;5884:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5935:1;5931;:5;5924:12;;5778:166;;;;;:::o;20373:378::-;20476:1;20457:21;;:7;:21;;;;20449:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20527:49;20556:1;20560:7;20569:6;20527:20;:49::i;:::-;20604:24;20621:6;20604:12;;:16;;:24;;;;:::i;:::-;20589:12;:39;;;;20660:30;20683:6;20660:9;:18;20670:7;20660:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;20639:9;:18;20649:7;20639:18;;;;;;;;;;;;;;;:51;;;;20727:7;20706:37;;20723:1;20706:37;;;20736:6;20706:37;;;;;;;;;;;;;;;;;;20373:378;;:::o;23388:125::-;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.7.6;\r\nimport \"./ERC20.sol\";\r\n\r\ncontract PolkaDex is ERC20 {\r\n    address payable Owner;\r\n    uint256  immutable InitialBlockNumber ;\r\n\r\n    constructor() ERC20(\"Polkadex\", \"PDEX\") {\r\n        mainHolder();\r\n        Owner = msg.sender;\r\n        InitialBlockNumber = block.number;\r\n    }\r\n\r\n    function ClaimAfterVesting() public {\r\n        // The second tranch of vesting happens after 3 months (1 quarter = (3*30*24*60*60)/13.14 blocks) from TGE\r\n        require(block.number > InitialBlockNumber + 1 || block.number == InitialBlockNumber + 1 , \"Time to claim vested tokens has not reached\");\r\n        require(VestedTokens[msg.sender] > 0, \"You are not eligible for claim\");\r\n        _mint(msg.sender, VestedTokens[msg.sender]);\r\n        VestedTokens[msg.sender] = 0;   \r\n    }\r\n\r\n    modifier OnlyOwner {\r\n        require(msg.sender == Owner, \"unauthorized access\");\r\n        _;\r\n    }\r\n    function TransferOwnerShip(address payable NewAddress) public OnlyOwner {\r\n        require(NewAddress!=address(0),\"TransferOwnerShip Denied\");\r\n        Owner = NewAddress;\r\n    }\r\n\r\n    function ShowOwner() public view returns (address) {\r\n        return Owner;\r\n    }\r\n}\r\n",
  "sourcePath": "D:/PDex UI/contracts/PolkaDex.sol",
  "ast": {
    "absolutePath": "/D/PDex UI/contracts/PolkaDex.sol",
    "exportedSymbols": {
      "Context": [
        451
      ],
      "ERC20": [
        1193
      ],
      "IERC20": [
        430
      ],
      "PolkaDex": [
        1350
      ],
      "SafeMath": [
        354
      ]
    },
    "id": 1351,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1232,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:22:2"
      },
      {
        "absolutePath": "/D/PDex UI/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1233,
        "nodeType": "ImportDirective",
        "scope": 1351,
        "sourceUnit": 1194,
        "src": "57:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1234,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1193,
              "src": "103:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1193",
                "typeString": "contract ERC20"
              }
            },
            "id": 1235,
            "nodeType": "InheritanceSpecifier",
            "src": "103:5:2"
          }
        ],
        "contractDependencies": [
          430,
          451,
          1193
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1350,
        "linearizedBaseContracts": [
          1350,
          1193,
          430,
          451
        ],
        "name": "PolkaDex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1237,
            "mutability": "mutable",
            "name": "Owner",
            "nodeType": "VariableDeclaration",
            "scope": 1350,
            "src": "116:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1236,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "116:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1239,
            "mutability": "immutable",
            "name": "InitialBlockNumber",
            "nodeType": "VariableDeclaration",
            "scope": 1350,
            "src": "144:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1238,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "144:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "231:104:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1246,
                      "name": "mainHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "242:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "242:12:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1248,
                  "nodeType": "ExpressionStatement",
                  "src": "242:12:2"
                },
                {
                  "expression": {
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1249,
                      "name": "Owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "265:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1250,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "273:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "273:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "265:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "265:18:2"
                },
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1254,
                      "name": "InitialBlockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1239,
                      "src": "294:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1255,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "315:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "315:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "294:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "294:33:2"
                }
              ]
            },
            "id": 1260,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "506f6c6b61646578",
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "211:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f62134091603200f14a239ec9fcd5ab61bf15f63a22423a3122b18934bf8068b",
                      "typeString": "literal_string \"Polkadex\""
                    },
                    "value": "Polkadex"
                  },
                  {
                    "hexValue": "50444558",
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "223:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ad8931bd8d5c012dbea27e54f68d62844a2dc45570a60b196dbb9bb2ec7435fd",
                      "typeString": "literal_string \"PDEX\""
                    },
                    "value": "PDEX"
                  }
                ],
                "id": 1244,
                "modifierName": {
                  "id": 1241,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1193,
                  "src": "205:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1193_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "205:25:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:2:2"
            },
            "returnParameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:0:2"
            },
            "scope": 1350,
            "src": "191:144:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1306,
              "nodeType": "Block",
              "src": "379:449:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1264,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "514:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "514:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1266,
                              "name": "InitialBlockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "529:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "550:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "529:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "514:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1270,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "555:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "555:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1272,
                              "name": "InitialBlockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "571:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "592:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "571:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "555:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "514:79:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54696d6520746f20636c61696d2076657374656420746f6b656e7320686173206e6f742072656163686564",
                        "id": 1277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "596:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_266e411b7c2122655be1ae1f7e1e87e9a434e9295d9483ac95f1365051c76060",
                          "typeString": "literal_string \"Time to claim vested tokens has not reached\""
                        },
                        "value": "Time to claim vested tokens has not reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_266e411b7c2122655be1ae1f7e1e87e9a434e9295d9483ac95f1365051c76060",
                          "typeString": "literal_string \"Time to claim vested tokens has not reached\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "506:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "506:136:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1279,
                  "nodeType": "ExpressionStatement",
                  "src": "506:136:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1281,
                            "name": "VestedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "661:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1284,
                          "indexExpression": {
                            "expression": {
                              "id": 1282,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "674:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "674:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "661:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "688:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "661:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420656c696769626c6520666f7220636c61696d",
                        "id": 1287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "691:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63e8366e98f931b1755a2eedde3147bd726867ecd3fc7dee3eb89a59a5cf49a7",
                          "typeString": "literal_string \"You are not eligible for claim\""
                        },
                        "value": "You are not eligible for claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63e8366e98f931b1755a2eedde3147bd726867ecd3fc7dee3eb89a59a5cf49a7",
                          "typeString": "literal_string \"You are not eligible for claim\""
                        }
                      ],
                      "id": 1280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "653:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "653:71:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "741:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "741:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1293,
                          "name": "VestedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "753:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1296,
                        "indexExpression": {
                          "expression": {
                            "id": 1294,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "766:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "766:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "753:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1290,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 856,
                      "src": "735:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "735:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "735:43:2"
                },
                {
                  "expression": {
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1299,
                        "name": "VestedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "789:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1302,
                      "indexExpression": {
                        "expression": {
                          "id": 1300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "802:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "802:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "789:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "816:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "789:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "789:28:2"
                }
              ]
            },
            "functionSelector": "3ac82580",
            "id": 1307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ClaimAfterVesting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:2:2"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "379:0:2"
            },
            "scope": 1350,
            "src": "343:485:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "855:82:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1310,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "874:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "874:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1312,
                          "name": "Owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1237,
                          "src": "888:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "874:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a656420616363657373",
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "895:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b47b6d10766d23fd62afa94529393e7bcc69b1ce76ff9117e2c6def66774c28e",
                          "typeString": "literal_string \"unauthorized access\""
                        },
                        "value": "unauthorized access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b47b6d10766d23fd62afa94529393e7bcc69b1ce76ff9117e2c6def66774c28e",
                          "typeString": "literal_string \"unauthorized access\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "866:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "866:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1316,
                  "nodeType": "ExpressionStatement",
                  "src": "866:51:2"
                },
                {
                  "id": 1317,
                  "nodeType": "PlaceholderStatement",
                  "src": "928:1:2"
                }
              ]
            },
            "id": 1319,
            "name": "OnlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:2"
            },
            "src": "836:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1340,
              "nodeType": "Block",
              "src": "1015:106:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1327,
                          "name": "NewAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1321,
                          "src": "1034:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1054:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1046:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1328,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1046:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1046:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1034:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e736665724f776e6572536869702044656e696564",
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1057:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a21512f57798a4813b499d2f97dfdee98592656cc13791d3d202ef5ec123dfb",
                          "typeString": "literal_string \"TransferOwnerShip Denied\""
                        },
                        "value": "TransferOwnerShip Denied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a21512f57798a4813b499d2f97dfdee98592656cc13791d3d202ef5ec123dfb",
                          "typeString": "literal_string \"TransferOwnerShip Denied\""
                        }
                      ],
                      "id": 1326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1026:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:58:2"
                },
                {
                  "expression": {
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1336,
                      "name": "Owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1237,
                      "src": "1095:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1337,
                      "name": "NewAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1321,
                      "src": "1103:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1095:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:18:2"
                }
              ]
            },
            "functionSelector": "b1eb3468",
            "id": 1341,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1324,
                "modifierName": {
                  "id": 1323,
                  "name": "OnlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1319,
                  "src": "1005:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:9:2"
              }
            ],
            "name": "TransferOwnerShip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "NewAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1341,
                  "src": "970:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "969:28:2"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1015:0:2"
            },
            "scope": 1350,
            "src": "943:178:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1348,
              "nodeType": "Block",
              "src": "1180:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 1346,
                    "name": "Owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1237,
                    "src": "1198:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 1345,
                  "id": 1347,
                  "nodeType": "Return",
                  "src": "1191:12:2"
                }
              ]
            },
            "functionSelector": "96ce267a",
            "id": 1349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ShowOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:2:2"
            },
            "returnParameters": {
              "id": 1345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1344,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "1171:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1171:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1170:9:2"
            },
            "scope": 1350,
            "src": "1129:82:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1351,
        "src": "82:1132:2"
      }
    ],
    "src": "33:1183:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/PDex UI/contracts/PolkaDex.sol",
      "exportedSymbols": {
        "Context": [
          451
        ],
        "ERC20": [
          1193
        ],
        "IERC20": [
          430
        ],
        "PolkaDex": [
          1350
        ],
        "SafeMath": [
          354
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".6"
          ]
        },
        "id": 1232,
        "name": "PragmaDirective",
        "src": "33:22:2"
      },
      {
        "attributes": {
          "SourceUnit": 1194,
          "absolutePath": "/D/PDex UI/contracts/ERC20.sol",
          "file": "./ERC20.sol",
          "scope": 1351,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1233,
        "name": "ImportDirective",
        "src": "57:21:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            430,
            451,
            1193
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1350,
            1193,
            430,
            451
          ],
          "name": "PolkaDex",
          "scope": 1351
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 1193,
                  "type": "contract ERC20"
                },
                "id": 1234,
                "name": "UserDefinedTypeName",
                "src": "103:5:2"
              }
            ],
            "id": 1235,
            "name": "InheritanceSpecifier",
            "src": "103:5:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "Owner",
              "scope": 1350,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 1236,
                "name": "ElementaryTypeName",
                "src": "116:15:2"
              }
            ],
            "id": 1237,
            "name": "VariableDeclaration",
            "src": "116:21:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "immutable",
              "name": "InitialBlockNumber",
              "scope": 1350,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1238,
                "name": "ElementaryTypeName",
                "src": "144:7:2"
              }
            ],
            "id": 1239,
            "name": "VariableDeclaration",
            "src": "144:37:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1350,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1240,
                "name": "ParameterList",
                "src": "202:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1245,
                "name": "ParameterList",
                "src": "231:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1193,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 1241,
                    "name": "Identifier",
                    "src": "205:5:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "506f6c6b61646578",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"Polkadex\"",
                      "value": "Polkadex"
                    },
                    "id": 1242,
                    "name": "Literal",
                    "src": "211:10:2"
                  },
                  {
                    "attributes": {
                      "hexvalue": "50444558",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"PDEX\"",
                      "value": "PDEX"
                    },
                    "id": 1243,
                    "name": "Literal",
                    "src": "223:6:2"
                  }
                ],
                "id": 1244,
                "name": "ModifierInvocation",
                "src": "205:25:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1192,
                              "type": "function ()",
                              "value": "mainHolder"
                            },
                            "id": 1246,
                            "name": "Identifier",
                            "src": "242:10:2"
                          }
                        ],
                        "id": 1247,
                        "name": "FunctionCall",
                        "src": "242:12:2"
                      }
                    ],
                    "id": 1248,
                    "name": "ExpressionStatement",
                    "src": "242:12:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1237,
                              "type": "address payable",
                              "value": "Owner"
                            },
                            "id": 1249,
                            "name": "Identifier",
                            "src": "265:5:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1250,
                                "name": "Identifier",
                                "src": "273:3:2"
                              }
                            ],
                            "id": 1251,
                            "name": "MemberAccess",
                            "src": "273:10:2"
                          }
                        ],
                        "id": 1252,
                        "name": "Assignment",
                        "src": "265:18:2"
                      }
                    ],
                    "id": 1253,
                    "name": "ExpressionStatement",
                    "src": "265:18:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1239,
                              "type": "uint256",
                              "value": "InitialBlockNumber"
                            },
                            "id": 1254,
                            "name": "Identifier",
                            "src": "294:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "number",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 1255,
                                "name": "Identifier",
                                "src": "315:5:2"
                              }
                            ],
                            "id": 1256,
                            "name": "MemberAccess",
                            "src": "315:12:2"
                          }
                        ],
                        "id": 1257,
                        "name": "Assignment",
                        "src": "294:33:2"
                      }
                    ],
                    "id": 1258,
                    "name": "ExpressionStatement",
                    "src": "294:33:2"
                  }
                ],
                "id": 1259,
                "name": "Block",
                "src": "231:104:2"
              }
            ],
            "id": 1260,
            "name": "FunctionDefinition",
            "src": "191:144:2"
          },
          {
            "attributes": {
              "functionSelector": "3ac82580",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "ClaimAfterVesting",
              "scope": 1350,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1261,
                "name": "ParameterList",
                "src": "369:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1262,
                "name": "ParameterList",
                "src": "379:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_266e411b7c2122655be1ae1f7e1e87e9a434e9295d9483ac95f1365051c76060",
                                  "typeString": "literal_string \"Time to claim vested tokens has not reached\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1263,
                            "name": "Identifier",
                            "src": "506:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "||",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967292,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 1264,
                                        "name": "Identifier",
                                        "src": "514:5:2"
                                      }
                                    ],
                                    "id": 1265,
                                    "name": "MemberAccess",
                                    "src": "514:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "+",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1239,
                                          "type": "uint256",
                                          "value": "InitialBlockNumber"
                                        },
                                        "id": 1266,
                                        "name": "Identifier",
                                        "src": "529:18:2"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 1267,
                                        "name": "Literal",
                                        "src": "550:1:2"
                                      }
                                    ],
                                    "id": 1268,
                                    "name": "BinaryOperation",
                                    "src": "529:22:2"
                                  }
                                ],
                                "id": 1269,
                                "name": "BinaryOperation",
                                "src": "514:37:2"
                              },
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "number",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967292,
                                          "type": "block",
                                          "value": "block"
                                        },
                                        "id": 1270,
                                        "name": "Identifier",
                                        "src": "555:5:2"
                                      }
                                    ],
                                    "id": 1271,
                                    "name": "MemberAccess",
                                    "src": "555:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "+",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1239,
                                          "type": "uint256",
                                          "value": "InitialBlockNumber"
                                        },
                                        "id": 1272,
                                        "name": "Identifier",
                                        "src": "571:18:2"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "31",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 1",
                                          "value": "1"
                                        },
                                        "id": 1273,
                                        "name": "Literal",
                                        "src": "592:1:2"
                                      }
                                    ],
                                    "id": 1274,
                                    "name": "BinaryOperation",
                                    "src": "571:22:2"
                                  }
                                ],
                                "id": 1275,
                                "name": "BinaryOperation",
                                "src": "555:38:2"
                              }
                            ],
                            "id": 1276,
                            "name": "BinaryOperation",
                            "src": "514:79:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "54696d6520746f20636c61696d2076657374656420746f6b656e7320686173206e6f742072656163686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Time to claim vested tokens has not reached\"",
                              "value": "Time to claim vested tokens has not reached"
                            },
                            "id": 1277,
                            "name": "Literal",
                            "src": "596:45:2"
                          }
                        ],
                        "id": 1278,
                        "name": "FunctionCall",
                        "src": "506:136:2"
                      }
                    ],
                    "id": 1279,
                    "name": "ExpressionStatement",
                    "src": "506:136:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_63e8366e98f931b1755a2eedde3147bd726867ecd3fc7dee3eb89a59a5cf49a7",
                                  "typeString": "literal_string \"You are not eligible for claim\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1280,
                            "name": "Identifier",
                            "src": "653:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 491,
                                      "type": "mapping(address => uint256)",
                                      "value": "VestedTokens"
                                    },
                                    "id": 1281,
                                    "name": "Identifier",
                                    "src": "661:12:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 1282,
                                        "name": "Identifier",
                                        "src": "674:3:2"
                                      }
                                    ],
                                    "id": 1283,
                                    "name": "MemberAccess",
                                    "src": "674:10:2"
                                  }
                                ],
                                "id": 1284,
                                "name": "IndexAccess",
                                "src": "661:24:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1285,
                                "name": "Literal",
                                "src": "688:1:2"
                              }
                            ],
                            "id": 1286,
                            "name": "BinaryOperation",
                            "src": "661:28:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "596f7520617265206e6f7420656c696769626c6520666f7220636c61696d",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"You are not eligible for claim\"",
                              "value": "You are not eligible for claim"
                            },
                            "id": 1287,
                            "name": "Literal",
                            "src": "691:32:2"
                          }
                        ],
                        "id": 1288,
                        "name": "FunctionCall",
                        "src": "653:71:2"
                      }
                    ],
                    "id": 1289,
                    "name": "ExpressionStatement",
                    "src": "653:71:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 856,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1290,
                            "name": "Identifier",
                            "src": "735:5:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1291,
                                "name": "Identifier",
                                "src": "741:3:2"
                              }
                            ],
                            "id": 1292,
                            "name": "MemberAccess",
                            "src": "741:10:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 491,
                                  "type": "mapping(address => uint256)",
                                  "value": "VestedTokens"
                                },
                                "id": 1293,
                                "name": "Identifier",
                                "src": "753:12:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1294,
                                    "name": "Identifier",
                                    "src": "766:3:2"
                                  }
                                ],
                                "id": 1295,
                                "name": "MemberAccess",
                                "src": "766:10:2"
                              }
                            ],
                            "id": 1296,
                            "name": "IndexAccess",
                            "src": "753:24:2"
                          }
                        ],
                        "id": 1297,
                        "name": "FunctionCall",
                        "src": "735:43:2"
                      }
                    ],
                    "id": 1298,
                    "name": "ExpressionStatement",
                    "src": "735:43:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 491,
                                  "type": "mapping(address => uint256)",
                                  "value": "VestedTokens"
                                },
                                "id": 1299,
                                "name": "Identifier",
                                "src": "789:12:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1300,
                                    "name": "Identifier",
                                    "src": "802:3:2"
                                  }
                                ],
                                "id": 1301,
                                "name": "MemberAccess",
                                "src": "802:10:2"
                              }
                            ],
                            "id": 1302,
                            "name": "IndexAccess",
                            "src": "789:24:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1303,
                            "name": "Literal",
                            "src": "816:1:2"
                          }
                        ],
                        "id": 1304,
                        "name": "Assignment",
                        "src": "789:28:2"
                      }
                    ],
                    "id": 1305,
                    "name": "ExpressionStatement",
                    "src": "789:28:2"
                  }
                ],
                "id": 1306,
                "name": "Block",
                "src": "379:449:2"
              }
            ],
            "id": 1307,
            "name": "FunctionDefinition",
            "src": "343:485:2"
          },
          {
            "attributes": {
              "name": "OnlyOwner",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1308,
                "name": "ParameterList",
                "src": "855:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b47b6d10766d23fd62afa94529393e7bcc69b1ce76ff9117e2c6def66774c28e",
                                  "typeString": "literal_string \"unauthorized access\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1309,
                            "name": "Identifier",
                            "src": "866:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1310,
                                    "name": "Identifier",
                                    "src": "874:3:2"
                                  }
                                ],
                                "id": 1311,
                                "name": "MemberAccess",
                                "src": "874:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1237,
                                  "type": "address payable",
                                  "value": "Owner"
                                },
                                "id": 1312,
                                "name": "Identifier",
                                "src": "888:5:2"
                              }
                            ],
                            "id": 1313,
                            "name": "BinaryOperation",
                            "src": "874:19:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "756e617574686f72697a656420616363657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"unauthorized access\"",
                              "value": "unauthorized access"
                            },
                            "id": 1314,
                            "name": "Literal",
                            "src": "895:21:2"
                          }
                        ],
                        "id": 1315,
                        "name": "FunctionCall",
                        "src": "866:51:2"
                      }
                    ],
                    "id": 1316,
                    "name": "ExpressionStatement",
                    "src": "866:51:2"
                  },
                  {
                    "id": 1317,
                    "name": "PlaceholderStatement",
                    "src": "928:1:2"
                  }
                ],
                "id": 1318,
                "name": "Block",
                "src": "855:82:2"
              }
            ],
            "id": 1319,
            "name": "ModifierDefinition",
            "src": "836:101:2"
          },
          {
            "attributes": {
              "functionSelector": "b1eb3468",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "TransferOwnerShip",
              "scope": 1350,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "NewAddress",
                      "scope": 1341,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 1320,
                        "name": "ElementaryTypeName",
                        "src": "970:15:2"
                      }
                    ],
                    "id": 1321,
                    "name": "VariableDeclaration",
                    "src": "970:26:2"
                  }
                ],
                "id": 1322,
                "name": "ParameterList",
                "src": "969:28:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1325,
                "name": "ParameterList",
                "src": "1015:0:2"
              },
              {
                "attributes": {},
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1319,
                      "type": "modifier ()",
                      "value": "OnlyOwner"
                    },
                    "id": 1323,
                    "name": "Identifier",
                    "src": "1005:9:2"
                  }
                ],
                "id": 1324,
                "name": "ModifierInvocation",
                "src": "1005:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6a21512f57798a4813b499d2f97dfdee98592656cc13791d3d202ef5ec123dfb",
                                  "typeString": "literal_string \"TransferOwnerShip Denied\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1326,
                            "name": "Identifier",
                            "src": "1026:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1321,
                                  "type": "address payable",
                                  "value": "NewAddress"
                                },
                                "id": 1327,
                                "name": "Identifier",
                                "src": "1034:10:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 1328,
                                        "name": "ElementaryTypeName",
                                        "src": "1046:7:2"
                                      }
                                    ],
                                    "id": 1329,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1046:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 1330,
                                    "name": "Literal",
                                    "src": "1054:1:2"
                                  }
                                ],
                                "id": 1331,
                                "name": "FunctionCall",
                                "src": "1046:10:2"
                              }
                            ],
                            "id": 1332,
                            "name": "BinaryOperation",
                            "src": "1034:22:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5472616e736665724f776e6572536869702044656e696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"TransferOwnerShip Denied\"",
                              "value": "TransferOwnerShip Denied"
                            },
                            "id": 1333,
                            "name": "Literal",
                            "src": "1057:26:2"
                          }
                        ],
                        "id": 1334,
                        "name": "FunctionCall",
                        "src": "1026:58:2"
                      }
                    ],
                    "id": 1335,
                    "name": "ExpressionStatement",
                    "src": "1026:58:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1237,
                              "type": "address payable",
                              "value": "Owner"
                            },
                            "id": 1336,
                            "name": "Identifier",
                            "src": "1095:5:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1321,
                              "type": "address payable",
                              "value": "NewAddress"
                            },
                            "id": 1337,
                            "name": "Identifier",
                            "src": "1103:10:2"
                          }
                        ],
                        "id": 1338,
                        "name": "Assignment",
                        "src": "1095:18:2"
                      }
                    ],
                    "id": 1339,
                    "name": "ExpressionStatement",
                    "src": "1095:18:2"
                  }
                ],
                "id": 1340,
                "name": "Block",
                "src": "1015:106:2"
              }
            ],
            "id": 1341,
            "name": "FunctionDefinition",
            "src": "943:178:2"
          },
          {
            "attributes": {
              "functionSelector": "96ce267a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "ShowOwner",
              "scope": 1350,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1342,
                "name": "ParameterList",
                "src": "1147:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1349,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1343,
                        "name": "ElementaryTypeName",
                        "src": "1171:7:2"
                      }
                    ],
                    "id": 1344,
                    "name": "VariableDeclaration",
                    "src": "1171:7:2"
                  }
                ],
                "id": 1345,
                "name": "ParameterList",
                "src": "1170:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1345
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1237,
                          "type": "address payable",
                          "value": "Owner"
                        },
                        "id": 1346,
                        "name": "Identifier",
                        "src": "1198:5:2"
                      }
                    ],
                    "id": 1347,
                    "name": "Return",
                    "src": "1191:12:2"
                  }
                ],
                "id": 1348,
                "name": "Block",
                "src": "1180:31:2"
              }
            ],
            "id": 1349,
            "name": "FunctionDefinition",
            "src": "1129:82:2"
          }
        ],
        "id": 1350,
        "name": "ContractDefinition",
        "src": "82:1132:2"
      }
    ],
    "id": 1351,
    "name": "SourceUnit",
    "src": "33:1183:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0xDeae2B439a15a2acCe1160b8303834eE6491e91d",
      "transactionHash": "0xffd877f2bd1ec9ede916dd2e90874a70b9a033fc35bcd922ef9d86e0384b105e"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA95eB4213db871c5E7aee862550Db5BCD02D363c",
      "transactionHash": "0xfccc8f0a88d9a22e8f0ca34de25ef038c9551ff8e89f0502f80802eee90d21f2"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-01T12:50:33.634Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}